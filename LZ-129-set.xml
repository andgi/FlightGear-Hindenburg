<?xml version="1.0"?>
<!-- $Id: LZ-129-set.xml,v 1.8 2007-05-13 22:20:19 anders Exp $ -->
<!--
  LZ-129 Hindenburg

  Copyright (C) 2006  Anders Gidenstam  (anders(at)gidenstam.org)
  This file is licensed under the GPL license.
-->
<PropertyList include="LZ-129-common.xml">

 <sim>

  <description>LZ 129 Hindenburg (using the experimental LTA JSBSim FDM)</description>

  <flight-model>jsb</flight-model>
  <aero>LZ-129</aero>

  <presets>
   <onground>true</onground>
  </presets>

  <systems>
   <electrical>
    <path/>
   </electrical>
  </systems>
<!--
  <instrumentation>
   <path>Aircraft/Submarine_Scout/Systems/instrumentation.xml</path>
  </instrumentation>
-->
 </sim>

 <!-- Temporary solution. -->
 <sound>
  <audible>true</audible>
  <path>Aircraft/Boeing314/Sounds/Boeing314-sound.xml</path>
 </sound>

 <nasal>
  <WeighOff>
   <script>
    var weight_on_gear =
      props.globals.getNode("/fdm/jsbsim/forces/fbz-gear-lbs");
    var ballast = "/fdm/jsbsim/propulsion/ballast-tank[2]/contents-slug";

    print_wow = func {
      gui.popupTip("Current weight on gear " ~
                   weight_on_gear.getValue() ~ " lbs.");
    }

    weighoff = func {
      gui.popupTip("Weigh-off to 10% in progress. " ~
                   "Current weight " ~ weight_on_gear.getValue() ~ " lbs.");
      slugtolb = 32.174049;
      lbtoslug = 1.0/slugtolb;
      wow = weight_on_gear.getValue();
      cont = getprop(ballast);
      interpolate(ballast,
                  cont + 0.90 * wow * lbtoslug,
                  10);
    }
   </script>
  </WeighOff>
 </nasal>

 <input>
  <keyboard>
   <!-- Keyboard commands -->

   <!-- Ballast commands ====================================== -->
   <key n="87"> 
    <name>W</name>
    <desc>Perform on-ground weigh-off.</desc>
    <binding> 
     <command>nasal</command>
     <script>
      WeighOff.weighoff();
     </script>     
    </binding>
   </key>
   <key n="119">
    <name>w</name>
    <desc>Show current on-ground weight.</desc>
    <binding>
     <command>nasal</command>
     <script>
      WeighOff.print_wow();
     </script>
    </binding>
   </key>
   <key n="100">
    <name>d</name>
    <desc>Drop 0.1% ballast aft</desc>
    <repeatable type="bool">true</repeatable>
    <binding>
     <command>nasal</command>
     <script>
       var p = "/fdm/jsbsim/propulsion/ballast-tank[1]/contents-slug";
       gui.popupTip("Dropping ballast aft! " ~
                    "Ballast left: " ~ getprop(p) ~ " slug");
       interpolate(p, 0.999 * getprop(p), 0.5);
     </script>
    </binding>
   </key>
   <key n="68">
    <name>D</name>
    <desc>Drop 1% ballast aft</desc>
    <repeatable type="bool">true</repeatable>
    <binding>
     <command>nasal</command>
     <script>
       var p = "/fdm/jsbsim/propulsion/ballast-tank[1]/contents-slug";
       gui.popupTip("Dropping ballast aft! " ~
                    "Ballast left: " ~ getprop(p) ~ " slug");
       interpolate(p, 0.99 * getprop(p), 0.5);
     </script>
    </binding>
   </key>
   <key n="115">
    <name>s</name>
    <desc>Drop 0.1% ballast fore</desc>
    <repeatable type="bool">true</repeatable>
    <binding>
     <command>nasal</command>
     <script>
       var p = "/fdm/jsbsim/propulsion/ballast-tank/contents-slug";
       gui.popupTip("Dropping ballast fore! " ~
                    "Ballast left: " ~ getprop(p) ~ " slug");
       interpolate(p, 0.999 * getprop(p), 0.5);
     </script>
    </binding>
   </key>
   <key n="83">
    <name>S</name>
    <desc>Drop 1% ballast fore</desc>
    <repeatable type="bool">true</repeatable>
    <binding>
     <command>nasal</command>
     <script>
       var p = "/fdm/jsbsim/propulsion/ballast-tank/contents-slug";
       gui.popupTip("Dropping ballast fore! " ~
                    "Ballast left: " ~ getprop(p) ~ " slug");
       interpolate(p, 0.99 * getprop(p), 0.5);
     </script>
    </binding>
   </key>
   
   <!-- Gas cell commands ====================================== -->
   <key n="70">
    <name>F</name>
    <desc>Open forward gas valves.</desc>
    <binding>
     <command>nasal</command>
     <script>
       gui.popupTip("Forward gas valves open!");
       setprop("/fdm/jsbsim/propulsion/gas-cell[15]/valve_open",
               1.00);
       setprop("/fdm/jsbsim/propulsion/gas-cell[14]/valve_open",
               1.00);
       setprop("/fdm/jsbsim/propulsion/gas-cell[13]/valve_open",
               1.00);
       setprop("/fdm/jsbsim/propulsion/gas-cell[12]/valve_open",
               1.00);
       setprop("/fdm/jsbsim/propulsion/gas-cell[11]/valve_open",
               1.00);
       setprop("/fdm/jsbsim/propulsion/gas-cell[10]/valve_open",
               1.00);
       setprop("/fdm/jsbsim/propulsion/gas-cell[9]/valve_open",
               1.00);
       setprop("/fdm/jsbsim/propulsion/gas-cell[8]/valve_open",
               1.00);
     </script>
    </binding>
   </key>
   <key n="102">
    <name>f</name>
    <desc>Close forward gas valves.</desc>
    <binding>
     <command>nasal</command>
     <script>
       gui.popupTip("Forward gas valves closed!");
       setprop("/fdm/jsbsim/propulsion/gas-cell[15]/valve_open",
               0.00);
       setprop("/fdm/jsbsim/propulsion/gas-cell[14]/valve_open",
               0.00);
       setprop("/fdm/jsbsim/propulsion/gas-cell[13]/valve_open",
               0.00);
       setprop("/fdm/jsbsim/propulsion/gas-cell[12]/valve_open",
               0.00);
       setprop("/fdm/jsbsim/propulsion/gas-cell[11]/valve_open",
               0.00);
       setprop("/fdm/jsbsim/propulsion/gas-cell[10]/valve_open",
               0.00);
       setprop("/fdm/jsbsim/propulsion/gas-cell[9]/valve_open",
               0.00);
       setprop("/fdm/jsbsim/propulsion/gas-cell[8]/valve_open",
               0.00);
     </script>
    </binding>
   </key>

   <key n="71">
    <name>G</name>
    <desc>Open aft gas valves.</desc>
    <binding>
     <command>nasal</command>
     <script>
       gui.popupTip("Aft gas valves open!");
       setprop("/fdm/jsbsim/propulsion/gas-cell[7]/valve_open",
               1.00);
       setprop("/fdm/jsbsim/propulsion/gas-cell[6]/valve_open",
               1.00);
       setprop("/fdm/jsbsim/propulsion/gas-cell[5]/valve_open",
               1.00);
       setprop("/fdm/jsbsim/propulsion/gas-cell[4]/valve_open",
               1.00);
       setprop("/fdm/jsbsim/propulsion/gas-cell[3]/valve_open",
               1.00);
       setprop("/fdm/jsbsim/propulsion/gas-cell[2]/valve_open",
               1.00);
       setprop("/fdm/jsbsim/propulsion/gas-cell[1]/valve_open",
               1.00);
       setprop("/fdm/jsbsim/propulsion/gas-cell/valve_open",
               1.00);
     </script>
    </binding>
   </key>
   <key n="103">
    <name>g</name>
    <desc>Close aft gas valves.</desc>
    <binding>
     <command>nasal</command>
     <script>
       gui.popupTip("Aft gas valves closed!");
       setprop("/fdm/jsbsim/propulsion/gas-cell[7]/valve_open",
               0.00);
       setprop("/fdm/jsbsim/propulsion/gas-cell[6]/valve_open",
               0.00);
       setprop("/fdm/jsbsim/propulsion/gas-cell[5]/valve_open",
               0.00);
       setprop("/fdm/jsbsim/propulsion/gas-cell[4]/valve_open",
               0.00);
       setprop("/fdm/jsbsim/propulsion/gas-cell[3]/valve_open",
               0.00);
       setprop("/fdm/jsbsim/propulsion/gas-cell[2]/valve_open",
               0.00);
       setprop("/fdm/jsbsim/propulsion/gas-cell[1]/valve_open",
               0.00);
       setprop("/fdm/jsbsim/propulsion/gas-cell/valve_open",
               0.00);
     </script>
    </binding>
   </key>

   <!-- Crew commands ========================================== -->
   <key n="69">
    <name>E</name>
    <desc>Activate elevator coxswain.</desc>
    <binding>
     <command>nasal</command>
     <script>
       setprop("/fdm/jsbsim/ap/elevator-coxswain-active",
               1);
     </script>
    </binding>
   </key>

   <key n="101">
    <name>e</name>
    <desc>Deativate elevator coxswain.</desc>
    <binding>
     <command>nasal</command>
     <script>
       setprop("/fdm/jsbsim/ap/elevator-coxswain-active",
               0);
     </script>
    </binding>
   </key>

   <key n="82">
    <name>R</name>
    <desc>Activate rudder coxswain.</desc>
    <binding>
     <command>nasal</command>
     <script>
       setprop("/fdm/jsbsim/ap/rudder-coxswain-active",
               1);
     </script>
    </binding>
   </key>
 
   <key n="114">
    <name>r</name>
    <desc>Deactivate rudder coxswain.</desc>
    <binding>
     <command>nasal</command>
     <script>
       setprop("/fdm/jsbsim/ap/rudder-coxswain-active",
               0);
     </script>
    </binding>
   </key>

  </keyboard>
 </input>

</PropertyList>
